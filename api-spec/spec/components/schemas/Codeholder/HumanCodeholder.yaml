allOf:
  - $ref: '#/components/schemas/Codeholder'
  - properties:
      firstName:
        type: string
        minLength: 1
        maxLength: 50
        pattern: ^[^\n]*$
        nullable: true
        description: The codeholder's preferred first name, must always be used unless you're 100% sure the legal name is needed. If `null`, `firstNameLegal` should be used. This field is always public in lists.

      firstNameLegal:
        type: string
        minLength: 1
        maxLength: 50
        pattern: ^[^\n]*$
        description: The codeholder's legal first name. This field is always public in lists unless overridden by `firstName`.

      lastName:
        type: string
        minLength: 1
        maxLength: 50
        pattern: ^[^\n]*$
        nullable: true
        description: The codeholder's preferred last name, must always be used unless you're 100% sure the legal name is needed. If `null`, `lastNameLegal` should be used.

      lastNameLegal:
        type: string
        minLength: 1
        maxLength: 50
        pattern: ^[^\n]*$
        nullable: true
        description: The codeholder's legal last name

      lastNamePublicity:
        description: Whether the codeholder's (legal) last name is public in lists
        default: public
        enum: [ private, public, members ]

      honorific:
        allOf:
          - $ref: '#/components/schemas/HumanHonorific'
          - description: The codeholder's honorific. This field is always public in lists.

      birthdate:
        type: string
        format: date
        nullable: true
        description: The codeholder's date of birth

      age:
        type: integer
        format: uint8
        readOnly: true
        nullable: true
        description: The codeholder's age in whole years. `null` if `birthdate` is `null`. Clamped to `deathdate` (if not null) if `isDead` is true.

      agePrimo:
        type: integer
        format: uint8
        readOnly: true
        nullable: true
        description: The codeholder's age in whole years at the beginning of the year. `null` if `birthdate` is `null`. Clamped to `deathdate` (if not null) if `isDead` is true.

      profession:
        type: string
        nullable: true
        minLength: 1
        maxLength: 50
        pattern: ^[^\n]*$
        description: The codeholder's profession. This field is always public in lists.

      landlinePhone:
        allOf:
          - nullable: true
            description: The landline phone number of the codeholder
          - $ref: '#/components/schemas/PhoneNumber'

      landlinePhoneFormatted:
        type: string
        readOnly: true
        nullable: true
        description: The landline phone number of the codeholder formatted according to its country code

      landlinePhonePublicity:
        description: The publicity of the codeholder's landline phone number in lists
        enum: [ private, public, members ]
        default: private

      cellphone:
        allOf:
          - nullable: true
            description: The cellphone number of the codeholder
          - $ref: '#/components/schemas/PhoneNumber'

      cellphoneFormatted:
        type: string
        readOnly: true
        nullable: true
        description: The cellphone number of the codeholder formatted according to its country code

      cellphonePublicity:
        description: The publicity of the codeholder's cellphone number in lists
        enum: [ private, public, members ]
        default: private

    required:
      - firstNameLegal
